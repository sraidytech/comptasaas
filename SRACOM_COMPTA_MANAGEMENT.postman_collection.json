{
	"info": {
		"_postman_id": "a1b2c3d4-e5f6-7890-abcd-ef1234567890",
		"name": "SRACOM_COMPTA_MANAGEMENT",
		"description": "API collection for testing the SRACOM_COMPTA_MANAGEMENT system",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Login (Super Admin)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"accessToken\", jsonData.access_token);",
									"pm.environment.set(\"refreshToken\", jsonData.refresh_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"sracomconnect@gmail.com\",\n    \"password\": \"SracomConnect@2025Sr\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						},
						"description": "Login as Super Admin"
					},
					"response": []
				},
				{
					"name": "Login (Admin)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"accessToken\", jsonData.access_token);",
									"pm.environment.set(\"refreshToken\", jsonData.refresh_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"admin@example.com\",\n    \"password\": \"password123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						},
						"description": "Login as Admin"
					},
					"response": []
				},
				{
					"name": "Login (Employee)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"accessToken\", jsonData.access_token);",
									"pm.environment.set(\"refreshToken\", jsonData.refresh_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"employee@example.com\",\n    \"password\": \"password123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						},
						"description": "Login as Employee"
					},
					"response": []
				},
				{
					"name": "Register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"accessToken\", jsonData.access_token);",
									"pm.environment.set(\"refreshToken\", jsonData.refresh_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"newuser@example.com\",\n    \"username\": \"newuser\",\n    \"password\": \"password123\",\n    \"tenantId\": \"{{defaultTenantId}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"register"
							]
						},
						"description": "Register a new user"
					},
					"response": []
				},
				{
					"name": "Refresh Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"accessToken\", jsonData.access_token);",
									"pm.environment.set(\"refreshToken\", jsonData.refresh_token);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"refresh_token\": \"{{refreshToken}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/refresh",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"refresh"
							]
						},
						"description": "Refresh access token"
					},
					"response": []
				}
			],
			"description": "Authentication endpoints"
		},
		{
			"name": "Clients",
			"item": [
				{
					"name": "Get All Clients",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/clients",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"clients"
							]
						},
						"description": "Get all clients"
					},
					"response": []
				},
				{
					"name": "Get Clients by Tenant",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/clients?tenantId={{defaultTenantId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"clients"
							],
							"query": [
								{
									"key": "tenantId",
									"value": "{{defaultTenantId}}"
								}
							]
						},
						"description": "Get clients filtered by tenant ID"
					},
					"response": []
				},
				{
					"name": "Create Client",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"clientId\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test Client\",\n    \"email\": \"client@example.com\",\n    \"phone\": \"+212 555-1234\",\n    \"type\": \"PERSONNE_MORALE\",\n    \"tenantId\": \"{{defaultTenantId}}\",\n    \"ice\": \"001234567890123\",\n    \"if\": \"12345678\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/clients",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"clients"
							]
						},
						"description": "Create a new client"
					},
					"response": []
				},
				{
					"name": "Get Client by ID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/clients/{{clientId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"clients",
								"{{clientId}}"
							]
						},
						"description": "Get client by ID"
					},
					"response": []
				},
				{
					"name": "Update Client",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Updated Client Name\",\n    \"email\": \"updated@example.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/clients/{{clientId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"clients",
								"{{clientId}}"
							]
						},
						"description": "Update client"
					},
					"response": []
				},
				{
					"name": "Assign Client to User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/clients/{{clientId}}/assign/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"clients",
								"{{clientId}}",
								"assign",
								"{{userId}}"
							]
						},
						"description": "Assign client to user"
					},
					"response": []
				},
				{
					"name": "Get Users Assigned to Client",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/clients/{{clientId}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"clients",
								"{{clientId}}",
								"users"
							]
						},
						"description": "Get users assigned to client"
					},
					"response": []
				},
				{
					"name": "Remove Client from User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/clients/{{clientId}}/assign/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"clients",
								"{{clientId}}",
								"assign",
								"{{userId}}"
							]
						},
						"description": "Remove client from user"
					},
					"response": []
				},
				{
					"name": "Delete Client",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/clients/{{clientId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"clients",
								"{{clientId}}"
							]
						},
						"description": "Delete client"
					},
					"response": []
				}
			],
			"description": "Client management endpoints"
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Get All Users",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users"
							]
						},
						"description": "Get all users"
					},
					"response": []
				},
				{
					"name": "Get Users by Tenant",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/users?tenantId={{defaultTenantId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users"
							],
							"query": [
								{
									"key": "tenantId",
									"value": "{{defaultTenantId}}"
								}
							]
						},
						"description": "Get users filtered by tenant ID"
					},
					"response": []
				},
				{
					"name": "Get User by ID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/users/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"{{userId}}"
							]
						},
						"description": "Get user by ID"
					},
					"response": []
				},
				{
					"name": "Create User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"userId\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"testuser@example.com\",\n    \"username\": \"testuser\",\n    \"password\": \"password123\",\n    \"roleId\": \"{{employeeRoleId}}\",\n    \"tenantId\": \"{{defaultTenantId}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users"
							]
						},
						"description": "Create a new user"
					},
					"response": []
				},
				{
					"name": "Update User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"updatedusername\",\n    \"email\": \"updated@example.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"{{userId}}"
							]
						},
						"description": "Update user"
					},
					"response": []
				},
				{
					"name": "Delete User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/users/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"{{userId}}"
							]
						},
						"description": "Delete user"
					},
					"response": []
				}
			],
			"description": "User management endpoints"
		},
		{
			"name": "Declaration Types",
			"item": [
				{
					"name": "Get All Declaration Types",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/admin/declaration-types",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"admin",
								"declaration-types"
							]
						},
						"description": "Get all declaration types"
					},
					"response": []
				},
				{
					"name": "Create Declaration Type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"declarationTypeId\", jsonData.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test Declaration Type\",\n    \"description\": \"Test description\",\n    \"articles\": \"Art. 123\",\n    \"months\": [1, 4, 7, 10]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/admin/declaration-types",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"admin",
								"declaration-types"
							]
						},
						"description": "Create a new declaration type with months in the same request"
					},
					"response": []
				},
				{
					"name": "Get Declaration Type by ID",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/admin/declaration-types/{{declarationTypeId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"admin",
								"declaration-types",
								"{{declarationTypeId}}"
							]
						},
						"description": "Get declaration type by ID"
					},
					"response": []
				},
				{
					"name": "Add Months to Declaration Type",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"months\": [1, 4, 7, 10]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/admin/declaration-types/{{declarationTypeId}}/months",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"admin",
								"declaration-types",
								"{{declarationTypeId}}",
								"months"
							]
						},
						"description": "Add months to declaration type"
					},
					"response": []
				},
				{
					"name": "Update Declaration Type",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Updated Declaration Type\",\n    \"description\": \"Updated description\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/admin/declaration-types/{{declarationTypeId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"admin",
								"declaration-types",
								"{{declarationTypeId}}"
							]
						},
						"description": "Update declaration type"
					},
					"response": []
				},
				{
					"name": "Remove Months from Declaration Type",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"months\": [1, 4]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/admin/declaration-types/{{declarationTypeId}}/months",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"admin",
								"declaration-types",
								"{{declarationTypeId}}",
								"months"
							]
						},
						"description": "Remove months from declaration type"
					},
					"response": []
				},
				{
					"name": "Delete Declaration Type",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{accessToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/admin/declaration-types/{{declarationTypeId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"admin",
								"declaration-types",
								"{{declarationTypeId}}"
							]
						},
						"description": "Delete declaration type"
					},
					"response": []
				}
			],
			"description": "Declaration Type management endpoints"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000",
			"type": "string"
		}
	]
}
